---
source: tests/cli.rs
expression: "CommandSnap {\n    args,\n    stdin: stdin.map(|s|\n            s.split_inclusive('\\n').map(|s| s.to_owned()).collect_vec()),\n    stdout: stdout.split_inclusive('\\n').map(|s| s.to_owned()).collect_vec(),\n    exit_code,\n}"
info:
  stderr: ""
---
args:
  - "--sorted"
  - "--python"
  - strings
  - is
stdin: ~
stdout:
  - "tests\\langs\\python\\base.py\n"
  - "24:    print(f\"Global test_var is now {test_var}\")\n"
  - "66:        print(f\"Class variable is now {cls.class_var}\")\n"
  - "72:        print(f\"Instance variable is {self.instance_var}\")\n"
  - "86:This is a\n"
  - "91:multiline_f_string = f\"\"\"This is a\n"
  - "96:raw_string = r\"This is a raw string with no special treatment for \\n\"\n"
  - "97:bytes_string = b\"This is a bytes string\"\n"
  - "98:bytes_string = rf\"This is a raw f-string with {raw_string}\"\n"
  - "118:            raise ZeroDivisionError(\"Division by zero\")\n"
  - "127:        print(\"This will always be printed\")\n"
  - "140:    print(f\"Nonlocal variable is {nonlocal_var}\")\n"
  - "158:        print(\"test_var is greater than 5\")\n"
  - "160:        print(\"test_var is 5 or less\")\n"
  - "165:        print(f\"Counter is {counter}\")\n"
  - "\n"
exit_code: 0
