---
source: tests/langs/mod.rs
expression: inscope_parts
---
- n: 24
  l: "    Example() : value(0) {}\n"
  m: "    ^^^^^^^^^                "
- n: 25
  l: "    explicit Example(int val) : value(val) {}\n"
  m: "             ^^^^^^^^^^^^^^^^                  "
- n: 30
  l: "        return Example(value + other.value);\n"
  m: "               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^   "
- n: 38
  l: "    T add(T a, T b) {\n"
  m: "      ^^^^^^^^^^^^^    "
- n: 54
  l: "    void function() {\n"
  m: "         ^^^^^^^^^^    "
- n: 66
  l: "void variadicFunction(Args... args) {\n"
  m: "     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^    "
- n: 72
  l: "std::optional<int> findValue(const std::vector<int>& vec, int value) {\n"
  m: "                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^    "
- n: 80
  l: "std::variant<int, std::string> getVariant(bool flag) {\n"
  m: "                               ^^^^^^^^^^^^^^^^^^^^^    "
- n: 87
  l: "std::tuple<int, double, std::string> createTuple() {\n"
  m: "                                     ^^^^^^^^^^^^^    "
- n: 91
  l: "int main() {\n"
  m: "    ^^^^^^    "
- n: 129
  l: "    variadicFunction(1, 2.5, \"test\");\n"
  m: "    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^   "
- n: 131
  l: "    int sum = lambda(3, 4);\n"
  m: "              ^^^^^^^^^^^^   "
- n: 133
  l: "    auto value = findValue({1, 2, 3}, 2);\n"
  m: "                 ^^^^^^^^^^^^^^^^^^^^^^^   "
- n: 138
  l: "    auto variantValue = getVariant(true);\n"
  m: "                        ^^^^^^^^^^^^^^^^   "
- n: 143
  l: "    auto [x, y, z] = createTuple();\n"
  m: "                     ^^^^^^^^^^^^^   "
